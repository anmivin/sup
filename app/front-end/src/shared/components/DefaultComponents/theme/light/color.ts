import { opacity } from 'ui/theme/common/opacity';
import { rgbaFromHex } from 'ui/theme/theme.lib';

import { semanticColors } from './semanticColors';

const featureColors = {
  primary50: '#A8D9FF',
  primary100: '#61ACE3',
  primary200: '#2886C8',
  primary300: '#0067AC',
  primary400: '#005997',
  primary500: '#004C81',
  primary600: '#003F6C',
  primary700: '#003256',
  primary800: '#002541',
  primary900: '#00192B',

  secondary50: '#FFE8B7',
  secondary100: '#FFDC8D',
  secondary200: '#FFCC62',
  secondary300: '#FFB93B',
  secondary400: '#E5991F',
  secondary500: '#CC7E00',
  secondary600: '#9C5E00',
  secondary700: '#6E4200',
  secondary800: '#452900',
  secondary900: '#261700',

  error50: '#FFC3C3',
  error100: '#FF9B99',
  error200: '#FF6F68',
  error300: '#F44336',
  error400: '#C6281F',
  error500: '#91130D',
  error600: '#600502',
  error700: '#3C0100',
  error800: '#240000',
  error900: '#170000',

  warning50: '#FFD8BB',
  warning100: '#FFC48C',
  warning200: '#FFAD59',
  warning300: '#EE9225',
  warning400: '#C07218',
  warning500: '#8B500D',
  warning600: '#5A3206',
  warning700: '#351D02',
  warning800: '#1E1000',
  warning900: '#120900',

  success50: '#9AF0C9',
  success100: '#7BECBD',
  success200: '#59E0AC',
  success300: '#37C995',
  success400: '#1FA377',
  success500: '#0C7655',
  success600: '#024D38',
  success700: '#003023',
  success800: '#001E17',
  success900: '#001712',

  info50: '#9FE0FF',
  info100: '#87D8FF',
  info200: '#69C3FF',
  info300: '#47A3FF',
  info400: '#277FCF',
  info500: '#0F5A99',
  info600: '#013A66',
  info700: '#00253F',
  info800: '#001726',
  info900: '#000F17',

  surface50: '#FFF',
  surface100: '#FFF',
  surface200: '#FFF',
  surface300: '#FFF',
  surface400: '#FFF',
  surface500: '#FFF',
  surface600: '#FFF',
  surface700: '#FFF',
  surface800: '#FFF',
  surface900: '#FFF',
  surfaceOn: '#F5F7FA',

  grayscale50: '#F5F7FA',
  grayscale100: '#DCE1E9',
  grayscale200: '#C2C9D4',
  grayscale300: '#A7AEBB',
  grayscale400: '#888F9C',
  grayscale500: '#707784',
  grayscale600: '#59606D',
  grayscale700: '#424954',
  grayscale800: '#2B313A',
  grayscale900: '#13171D',
};

const mainColors = {
  primary: featureColors.primary300,
  secondary: featureColors.secondary300,
  error: featureColors.error300,
  warning: featureColors.warning300,
  success: featureColors.success300,
  info: featureColors.info300,

  monoA: '#000',
  monoB: '#FFF',
  black: '#000',
  white: '#FFF',

  link: '#176CDA',
  linkVisited: '#883DF9',
  background: '#F5F7FA',
  background2: '#EDF0F5',
  switch: '#FAFAFA',
};

const alphaColors = {
  monoA25: rgbaFromHex(mainColors.monoA, opacity['25']),
  monoA50: rgbaFromHex(mainColors.monoA, opacity['50']),
  monoA75: rgbaFromHex(mainColors.monoA, opacity['75']),
  monoA100: rgbaFromHex(mainColors.monoA, opacity['100']),
  monoA150: rgbaFromHex(mainColors.monoA, opacity['150']),
  monoA200: rgbaFromHex(mainColors.monoA, opacity['200']),
  monoA300: rgbaFromHex(mainColors.monoA, opacity['300']),
  monoA400: rgbaFromHex(mainColors.monoA, opacity['400']),
  monoA500: rgbaFromHex(mainColors.monoA, opacity['500']),
  monoA550: rgbaFromHex(mainColors.monoA, opacity['550']),
  monoA600: rgbaFromHex(mainColors.monoA, opacity['600']),
  monoA700: rgbaFromHex(mainColors.monoA, opacity['700']),
  monoA800: rgbaFromHex(mainColors.monoA, opacity['800']),
  monoA900: rgbaFromHex(mainColors.monoA, opacity['900']),

  monoB25: rgbaFromHex(mainColors.monoB, opacity['25']),
  monoB50: rgbaFromHex(mainColors.monoB, opacity['50']),
  monoB75: rgbaFromHex(mainColors.monoB, opacity['75']),
  monoB100: rgbaFromHex(mainColors.monoB, opacity['100']),
  monoB150: rgbaFromHex(mainColors.monoB, opacity['150']),
  monoB200: rgbaFromHex(mainColors.monoB, opacity['200']),
  monoB300: rgbaFromHex(mainColors.monoB, opacity['300']),
  monoB400: rgbaFromHex(mainColors.monoB, opacity['400']),
  monoB500: rgbaFromHex(mainColors.monoB, opacity['500']),
  monoB550: rgbaFromHex(mainColors.monoB, opacity['550']),
  monoB600: rgbaFromHex(mainColors.monoB, opacity['600']),
  monoB700: rgbaFromHex(mainColors.monoB, opacity['700']),
  monoB800: rgbaFromHex(mainColors.monoB, opacity['800']),
  monoB900: rgbaFromHex(mainColors.monoB, opacity['900']),

  primaryA25: rgbaFromHex(mainColors.primary, opacity['25']),
  primaryA50: rgbaFromHex(mainColors.primary, opacity['50']),
  primaryA75: rgbaFromHex(mainColors.primary, opacity['75']),
  primaryA100: rgbaFromHex(mainColors.primary, opacity['100']),
  primaryA150: rgbaFromHex(mainColors.primary, opacity['150']),
  primaryA200: rgbaFromHex(mainColors.primary, opacity['200']),
  primaryA300: rgbaFromHex(mainColors.primary, opacity['300']),
  primaryA400: rgbaFromHex(mainColors.primary, opacity['400']),
  primaryA500: rgbaFromHex(mainColors.primary, opacity['500']),
  primaryA550: rgbaFromHex(mainColors.primary, opacity['550']),
  primaryA600: rgbaFromHex(mainColors.primary, opacity['600']),
  primaryA700: rgbaFromHex(mainColors.primary, opacity['700']),
  primaryA800: rgbaFromHex(mainColors.primary, opacity['800']),
  primaryA900: rgbaFromHex(mainColors.primary, opacity['900']),

  secondaryA25: rgbaFromHex(mainColors.secondary, opacity['25']),
  secondaryA50: rgbaFromHex(mainColors.secondary, opacity['50']),
  secondaryA75: rgbaFromHex(mainColors.secondary, opacity['75']),
  secondaryA100: rgbaFromHex(mainColors.secondary, opacity['100']),
  secondaryA150: rgbaFromHex(mainColors.secondary, opacity['150']),
  secondaryA200: rgbaFromHex(mainColors.secondary, opacity['200']),
  secondaryA300: rgbaFromHex(mainColors.secondary, opacity['300']),
  secondaryA400: rgbaFromHex(mainColors.secondary, opacity['400']),
  secondaryA500: rgbaFromHex(mainColors.secondary, opacity['500']),
  secondaryA550: rgbaFromHex(mainColors.secondary, opacity['550']),
  secondaryA600: rgbaFromHex(mainColors.secondary, opacity['600']),
  secondaryA700: rgbaFromHex(mainColors.secondary, opacity['700']),
  secondaryA800: rgbaFromHex(mainColors.secondary, opacity['800']),
  secondaryA900: rgbaFromHex(mainColors.secondary, opacity['900']),

  errorA25: rgbaFromHex(mainColors.error, opacity['25']),
  errorA50: rgbaFromHex(mainColors.error, opacity['50']),
  errorA75: rgbaFromHex(mainColors.error, opacity['75']),
  errorA100: rgbaFromHex(mainColors.error, opacity['100']),
  errorA150: rgbaFromHex(mainColors.error, opacity['150']),
  errorA200: rgbaFromHex(mainColors.error, opacity['200']),
  errorA300: rgbaFromHex(mainColors.error, opacity['300']),
  errorA400: rgbaFromHex(mainColors.error, opacity['400']),
  errorA500: rgbaFromHex(mainColors.error, opacity['500']),
  errorA550: rgbaFromHex(mainColors.error, opacity['550']),
  errorA600: rgbaFromHex(mainColors.error, opacity['600']),
  errorA700: rgbaFromHex(mainColors.error, opacity['700']),
  errorA800: rgbaFromHex(mainColors.error, opacity['800']),
  errorA900: rgbaFromHex(mainColors.error, opacity['900']),

  warningA25: rgbaFromHex(mainColors.warning, opacity['25']),
  warningA50: rgbaFromHex(mainColors.warning, opacity['50']),
  warningA75: rgbaFromHex(mainColors.warning, opacity['75']),
  warningA100: rgbaFromHex(mainColors.warning, opacity['100']),
  warningA150: rgbaFromHex(mainColors.warning, opacity['150']),
  warningA200: rgbaFromHex(mainColors.warning, opacity['200']),
  warningA300: rgbaFromHex(mainColors.warning, opacity['300']),
  warningA400: rgbaFromHex(mainColors.warning, opacity['400']),
  warningA500: rgbaFromHex(mainColors.warning, opacity['500']),
  warningA550: rgbaFromHex(mainColors.warning, opacity['550']),
  warningA600: rgbaFromHex(mainColors.warning, opacity['600']),
  warningA700: rgbaFromHex(mainColors.warning, opacity['700']),
  warningA800: rgbaFromHex(mainColors.warning, opacity['800']),
  warningA900: rgbaFromHex(mainColors.warning, opacity['900']),

  successA25: rgbaFromHex(mainColors.success, opacity['25']),
  successA50: rgbaFromHex(mainColors.success, opacity['50']),
  successA75: rgbaFromHex(mainColors.success, opacity['75']),
  successA100: rgbaFromHex(mainColors.success, opacity['100']),
  successA150: rgbaFromHex(mainColors.success, opacity['150']),
  successA200: rgbaFromHex(mainColors.success, opacity['200']),
  successA300: rgbaFromHex(mainColors.success, opacity['300']),
  successA400: rgbaFromHex(mainColors.success, opacity['400']),
  successA500: rgbaFromHex(mainColors.success, opacity['500']),
  successA550: rgbaFromHex(mainColors.success, opacity['550']),
  successA600: rgbaFromHex(mainColors.success, opacity['600']),
  successA700: rgbaFromHex(mainColors.success, opacity['700']),
  successA800: rgbaFromHex(mainColors.success, opacity['800']),
  successA900: rgbaFromHex(mainColors.success, opacity['900']),

  infoA25: rgbaFromHex(mainColors.info, opacity['25']),
  infoA50: rgbaFromHex(mainColors.info, opacity['50']),
  infoA75: rgbaFromHex(mainColors.info, opacity['75']),
  infoA100: rgbaFromHex(mainColors.info, opacity['100']),
  infoA150: rgbaFromHex(mainColors.info, opacity['150']),
  infoA200: rgbaFromHex(mainColors.info, opacity['200']),
  infoA300: rgbaFromHex(mainColors.info, opacity['300']),
  infoA400: rgbaFromHex(mainColors.info, opacity['400']),
  infoA500: rgbaFromHex(mainColors.info, opacity['500']),
  infoA550: rgbaFromHex(mainColors.info, opacity['550']),
  infoA600: rgbaFromHex(mainColors.info, opacity['600']),
  infoA700: rgbaFromHex(mainColors.info, opacity['700']),
  infoA800: rgbaFromHex(mainColors.info, opacity['800']),
  infoA900: rgbaFromHex(mainColors.info, opacity['900']),

  overlay100: rgbaFromHex('#1A1A1A', opacity['100']),
  overlay200: rgbaFromHex('#1A1A1A', opacity['200']),
  overlay300: rgbaFromHex('#1A1A1A', opacity['300']),
  overlay700: rgbaFromHex('#1A1A1A', opacity['700']),
  overlay900: rgbaFromHex('#1A1A1A', opacity['900']),

  none: 'transparent',
  transparent: 'transparent',
};

export const color = {
  ...semanticColors,
  ...featureColors,
  ...mainColors,
  ...alphaColors,
} as const;

export type Color = keyof typeof color;
export type ColorOptions = Record<Color, string>;
